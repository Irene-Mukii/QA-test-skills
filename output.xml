<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.10.6 on linux)" generated="20230223 13:51:55.801" rpa="false" schemaversion="3">
<suite id="s1" name="APITest" source="/home/irene-mukii/Soft. Eng./QA&amp;testing/herokuapp-testing/APITest.robot">
<kw name="Basic Auth Test" type="SETUP">
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>username=irene</arg>
<arg>password=abc123</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:51:55.867" level="INFO">${body} = {'username': 'irene', 'password': 'abc123'}</msg>
<status status="PASS" starttime="20230223 13:51:55.866" endtime="20230223 13:51:55.867"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>url=https://petstore.swagger.io/oauth/authorize</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20230223 13:51:57.963" level="INFO">POST Request : url=https://petstore.swagger.io/oauth/authorize (redirected) 
 path_url=/oauth/authorize 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '43', 'Content-Type': 'application/json'} 
 body=b'{"username": "irene", "password": "abc123"}' 
 </msg>
<msg timestamp="20230223 13:51:57.965" level="INFO">GET Response : url=https://petstore.swagger.io:443/oauth/login.jsp 
 status=200, reason=OK 
 headers={'Date': 'Thu, 23 Feb 2023 10:51:57 GMT', 'Content-Type': 'text/html; charset=ISO-8859-1', 'Content-Length': '2015', 'Connection': 'keep-alive', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Cache-Control': 'no-cache, no-store, max-age=0, must-revalidate', 'Pragma': 'no-cache', 'Expires': '0', 'X-Frame-Options': 'DENY', 'Server': 'Jetty(9.2.9.v20150224)'} 
 body=
&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
&lt;meta name="viewport" content="width=device-width, initial-scale=1.0" /&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8" /&gt;
&lt;title&gt;Sample OAuth Provider&lt;/title&gt;
	&lt;head&gt;
		&lt;link rel="stylesheet" href="/oauth/csso/auth.css"&gt;&lt;/link&gt;
		&lt;script src="/oauth/jso/jquery-1.8.0.min.js"&gt;&lt;/script&gt;
		&lt;script src="/oauth/jso/auth.js"&gt;&lt;/script&gt;
	&lt;/head&gt;
&lt;/head&gt;

&lt;body&gt;

	&lt;div class="container"&gt;

		
		

		&lt;div class="form-horizontal"&gt;
			&lt;header&gt;
				&lt;img class="main_image" src="/oauth/imageso/dog.png"&gt;&lt;/img&gt;
				&lt;h1&gt;&lt;/h1&gt;
				&lt;p class="oauth_body title"&gt;
					&lt;strong&gt;Hello, &lt;a href="#"&gt;Swagger Petstore&lt;/a&gt;&amp;nbsp;would like to you log in.&lt;/strong&gt;
				&lt;/p&gt;
				&lt;p class="oauth_body"&gt;
					This is a sample OAuth2 server which supports the Implicit or Client-side flow.  You can find
					the source code to the server &lt;a href="https://github.com/swagger-api/sample-oauth-provider#sample-oauth-provider"&gt;here&lt;/a&gt;.
				&lt;/p&gt;
				&lt;p class="oauth_body"&gt;
					Right now we have one user in our system: test, with passoword: abc123
				&lt;/p&gt;
			&lt;/header&gt;

			&lt;section class="email_form"&gt;
				&lt;form action="/oauth/login" method="post" role="form"&gt;

					&lt;div class="oauth_submit initial_form"&gt;
						&lt;button type="button" id="deny" class="button medium grey"&gt;
							&lt;span&gt;Cancel and go back&lt;/span&gt;
						&lt;/button&gt;
						&lt;button type="button" id="allow" class="button medium blue"&gt;
							&lt;span&gt;Allow&lt;/span&gt;
						&lt;/button&gt;
					&lt;/div&gt;
					&lt;div class="oauth_submit secondary_form"&gt;
						&lt;label for="username"&gt;Username&lt;/label&gt;
						&lt;input id="username" name="username" type="text" placeholder="Username" value="test"&gt;&lt;/input&gt;
						&lt;label for="password"&gt;Password&lt;/label&gt;
						&lt;input id="password" name="password" type="text" placeholder="Password" value="abc123" &gt;&lt;/input&gt;
						&lt;button type="submit" id="login" name="login" class="button medium blue"&gt;
							&lt;span&gt;Confirm&lt;/span&gt;
						&lt;/button&gt;
					&lt;/div&gt;
				&lt;/form&gt;
			&lt;/section&gt;
		&lt;/div&gt;
	&lt;/div&gt;


&lt;/body&gt;
&lt;/html&gt;
 
 </msg>
<msg timestamp="20230223 13:51:57.965" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:51:55.867" endtime="20230223 13:51:57.965"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${response.status_code}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230223 13:51:57.966" endtime="20230223 13:51:57.967"/>
</kw>
<status status="PASS" starttime="20230223 13:51:55.866" endtime="20230223 13:51:57.967"/>
</kw>
<test id="s1-t1" name="Quick Get Request for pets sold Test" line="17">
<kw name="Create Session" library="RequestsLibrary">
<arg>session1</arg>
<arg>${URL}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:51:57.969" level="INFO">Creating Session using : alias=session1, url=https://petstore.swagger.io/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:51:57.968" endtime="20230223 13:51:57.970"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${endpoint}</var>
<arg>/v2/pet/findByStatus?status=sold</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:51:57.971" level="INFO">${endpoint} = /v2/pet/findByStatus?status=sold</msg>
<status status="PASS" starttime="20230223 13:51:57.970" endtime="20230223 13:51:57.971"/>
</kw>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session1</arg>
<arg>${endpoint}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:51:59.025" level="INFO">GET Request : url=https://petstore.swagger.io/v2/pet/findByStatus?status=sold 
 path_url=/v2/pet/findByStatus?status=sold 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:51:59.025" level="INFO">GET Response : url=https://petstore.swagger.io/v2/pet/findByStatus?status=sold 
 status=200, reason=OK 
 headers={'Date': 'Thu, 23 Feb 2023 10:51:58 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'GET, POST, DELETE, PUT', 'Access-Control-Allow-Headers': 'Content-Type, api_key, Authorization', 'Server': 'Jetty(9.2.9.v20150224)'} 
 body=[{"id":9223372036854667928,"category":{"id":0,"name":"string"},"name":"rabbits are sold out","photoUrls":["string"],"tags":[{"id":0,"name":"string"}],"status":"sold"},{"id":14,"category":{"id":1816,"name":"Cat"},"name":"Katrina","photoUrls":["string"],"tags":[{"id":2,"name":"Mew"}],"status":"sold"},{"id":9223372036854668353,"category":{"id":48345351,"name":"dolore quis"},"name":"doggie","photoUrls":["deseru","nisi aute do incididunt"],"tags":[{"id":72677302,"name":"in incididunt dolore occaecat"},{"id":-38449077,"name":"adipisicing"}],"status":"sold"},{"id":17,"name":"Special_char_owner_!@#$^&amp;()`.testing","photoUrls":["https://petstore3.swagger.io/resources/photos/623389095.jpg"],"tags":[],"status":"sold"},{"id":19467,"name":"見響见响仮仏!$%&amp;()*+,-ƄƅƆḞḟṀʶʷʸăĄą","photoUrls":["https://petstore3.swagger.io/resources/photos/623389095.jpg"],"tags":[],"status":"sold"},{"id":13,"category":{"id":0,"name":"cats"},"photoUrls":["string"],"tags":[{"id":0,"name":"string"}],"status":"sold"}] 
 </msg>
<msg timestamp="20230223 13:51:59.025" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:51:57.971" endtime="20230223 13:51:59.026"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230223 13:51:59.026" endtime="20230223 13:51:59.028"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20230223 13:51:59.029" endtime="20230223 13:51:59.029"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${body}</var>
<arg>${response.content}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:51:59.032" level="INFO">${body} = [{"id":9223372036854667928,"category":{"id":0,"name":"string"},"name":"rabbits are sold out","photoUrls":["string"],"tags":[{"id":0,"name":"string"}],"status":"sold"},{"id":14,"category":{"id":1816,"n...</msg>
<status status="PASS" starttime="20230223 13:51:59.030" endtime="20230223 13:51:59.032"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${body}</arg>
<arg>sold</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230223 13:51:59.032" endtime="20230223 13:51:59.033"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${contentTypeValue}</var>
<arg>${response.headers}</arg>
<arg>Content-Type</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:51:59.035" level="INFO">${contentTypeValue} = application/json</msg>
<status status="PASS" starttime="20230223 13:51:59.033" endtime="20230223 13:51:59.035"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${contentTypeValue}</arg>
<arg>application/json</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:51:59.035" endtime="20230223 13:51:59.036"/>
</kw>
<status status="PASS" starttime="20230223 13:51:57.967" endtime="20230223 13:51:59.038"/>
</test>
<status status="PASS" starttime="20230223 13:51:55.801" endtime="20230223 13:51:59.039"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="APITest">APITest</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
